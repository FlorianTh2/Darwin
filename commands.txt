cd Hello.WebApi
dotnet ef migrations add "AdjustedContext" --context AppDbContext -o .\Data\Migrations # --project "Hello.WebApi"

cd Hello.WebApi
dotnet ef database update --context AppDbContext # --project "Hello.WebApi"

dotnet ef database update --context AppDbContext –TargetMigration: "20212342332_AddedToContext" # --project "Hello.WebApi" # before -targetmigration

dotnet ef migrations remove

sql management studio delete all current lettershop templates
delete from [ZenitDb].[dbo].[LettershopTemplates]

delete from [hello-auth].[dbo].[AspNetUsers]

C:\Users\Florian\AppData\Roaming\Microsoft\UserSecrets

https://localhost:5001/swagger/index.html

dotnet watch run

dotnet run

dotnet test

dotnet tool install --global dotnet-ef

dotnet run --launch-settings "dev"

docker build -t PersonalWebsiteBackend .
docker run -p 5000:5000 PersonalWebsiteBackend

docker-compose build
docker-compose up
https://0.0.0.0:5000/swagger/index.html
docker-compose down


weiter mit basecontroller
automapper einbauen
    description eventuell into service verlegen
kleinen mailservice bauen + integrieren in register, password reset, password update, passwordResetByAdmin,email update confirm,...

gucken dass [authorize] auch danach schaut, dass email bestätigt ist (da evt. sonst mit email update probleme)

passwort/username/email/... reset -> invalidate refreshtoken

callbackuri-creation in uriservice auslagern

validation for several identityController


dotnet new sln --name FooBar
dotnet new console --name Foo --output Foo
dotnet new console --name Bar --output Bar
dotnet sln add .\Foo\Foo.csproj
dotnet sln add .\Bar\Bar.csproj
dotnet restore
dotnet build FooBar.sln